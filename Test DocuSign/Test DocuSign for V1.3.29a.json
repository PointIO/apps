{"name":"Test DocuSign","desc":"App to test DocuSign Map and RELATEDS options","template":{"_id":{"$oid":"576a8a9a794b32c103ebb1c8"},"id":"576a8a9a794b32c103ebb1c8","owner":{"appid":"51C54CDB-D278-4CFD-B8378EF13462E5FB","org":"io.point.jgaye","user":"jgaye@point.io"},"recType":"app","appType":"Default","name":"Test DocuSign","desc":"App to test DocuSign Map and RELATEDS options","parentTags":[""],"childTag":"","creatorId":"jgaye@point.io","updaterId":"jgaye@point.io","tstamp":1466617985848,"createDate":{"$date":1466600090437},"updateDate":{"$date":1466617985848},"origin":{"id":"576855a4794b32df008be06b","name":"Test DocuSign","desc":"App to test DocuSign Map and RELATEDS options","creatorId":"jgaye@point.io","createDate":1466600090437,"checksum":"1B7A39A70B990BB7B0084085672124275767F05653FFE0192C332DE70EE7B3F8L2455"},"data":{"style":"<!--Enter Style Here-->","facts":{"relatedId":"3147ae3b-b0f3-4eae-9ef4-e2cd978f50b5","relatedLabel":"NDA","relatedTooltip":"I'm a demo NDA","relatedType":"DocusignTemplate","relatedMap":"576ace94794b32f602439423","relatedStatus":"OPEN","storagelink":"ecc1d510-7199-4a7a-b9e3-c2ac40312512","finishedfilename":"SignedNDA.pdf","mode":"demo","skipPreview":false,"skipReview":false,"brandId":"","vars":[{"key":"firstname","value":"Ziggy"},{"key":"lastname","value":"Stardust"},{"key":"company","value":"Moon Corp."}],"ProcessDocuSignREADMap":{"apidata_method":"GET","objId":"","objTypeId":"","display":"once"}},"forms":[{"taskname":"Select DocuSign Options","taskkey":"poi_SelectDocuSignOptions_form","formid":"576a8a9a794b32c203ebb1c0","formname":"poi_SelectDocuSignOptions_form"},{"taskname":"Show DocuSign View","taskkey":"poi_ShowDocuSignView_form","formid":"576a8a9a794b32c103ebb1c1","formname":"poi_ShowDocuSignView_form"}],"include":"","providers":[{"taskname":"Process DocuSign","taskkey":"poi_ProcessDocuSign_fact","providerid":"576a8a9a794b32c103ebb1c6"}],"processtype":{"name":"Test_DocuSign","version":"1:347507"},"icon":"","diagram_xml":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"newApp\" id=\"9\" inline=\"false\" deletable=\"false\" x=\"0\" y=\"0\">\n    <mutation formcount=\"2\" factcount=\"1\" forms=\",Select DocuSign Options,poi_SelectDocuSignOptions_form,Show DocuSign View,poi_ShowDocuSignView_form\" facts=\",Process DocuSign,poi_ProcessDocuSign_fact\" factmap=\",ProcessDocuSignREADMap\"></mutation>\n    <field name=\"PROCESSTYPES\">[\"Test DocuSign\",\"Test_DocuSign:1:347507\"]</field>\n    <value name=\"FORM_1\">\n      <block type=\"Form\" id=\"10\">\n        <field name=\"FORMS\">576a8a9a794b32c203ebb1c0</field>\n      </block>\n    </value>\n    <value name=\"FORM_2\">\n      <block type=\"Form\" id=\"11\">\n        <field name=\"FORMS\">576a8a9a794b32c103ebb1c1</field>\n      </block>\n    </value>\n    <value name=\"FACT_1\">\n      <block type=\"newFact\" id=\"12\" inline=\"false\">\n        <mutation inputcount=\"2\" type=\"READ\"></mutation>\n        <field name=\"FACTS\">576a8a9a794b32c103ebb1c6</field>\n        <field name=\"factTypes\">READ</field>\n        <field name=\"display\">once</field>\n      </block>\n    </value>\n  </block>\n</xml>","styleChoice":"Default","styleLink":""},"checksum":"2EEED5F78D7234C66D464A32AC53C2464BE193AF7531CFCDE7743DFA77208188L2402"},"facts":[{"_id":{"$oid":"576a8a9a794b32c103ebb1c6"},"id":"576a8a9a794b32c103ebb1c6","owner":{"appid":"51C54CDB-D278-4CFD-B8378EF13462E5FB","org":"io.point.jgaye","user":"jgaye@point.io"},"recType":"fact","name":"docusign fact provider","desc":"Recently Converted Fact Record","creatorId":"jgaye@point.io","updaterId":"jgaye@point.io","tstamp":1466625248026,"createDate":{"$date":1466600090390},"updateDate":{"$date":1466625248026},"origin":{"id":"5768552e794b32b9008be05d","name":"docusign fact provider","desc":"Recently Converted Fact Record","creatorId":"jgaye@point.io","createDate":1466600090390,"checksum":"9076C99CDEB9A4C06CC4509E22F669A580F13EC0382E0A898798F0D159151A9CL403"},"data":{"facts":{},"query":"","component":{"forms":[{"taskname":"Default","taskkey":"poi_default_view","formid":"576ad3d8794b321704439458","formname":"poi_default_view"}],"providers":[],"facts":{},"processid":"io.point.Docusign_provider","processtype":{"name":"io.point.Docusign_provider","version":"40:347511"}},"signature":{}},"checksum":"B4EFCC896F298B483417A9211D32635C04CB443F0BA1AD13DDF2ECF1F295C8D9L321"}],"flows":[{"PROCESSTYPE":{"id":"Test_DocuSign:1:347507","name":"Test DocuSign","key":"Test_DocuSign","category":"http://www.activiti.org/test","description":"%3Cxml%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%3E%3Cblock%20type%3D%22start%22%20id%3D%2210%22%20deletable%3D%22false%22%20x%3D%220%22%20y%3D%220%22%3E%3Cfield%20name%3D%22NAME%22%3ETest%20DocuSign%3C%2Ffield%3E%3Cnext%3E%3Cblock%20type%3D%22userTask%22%20id%3D%2211%22%20inline%3D%22false%22%3E%3Cfield%20name%3D%22NAME%22%3ESelect%20DocuSign%20Options%3C%2Ffield%3E%3Cnext%3E%3Cblock%20type%3D%22condition%22%20id%3D%2212%22%20inline%3D%22false%22%3E%3Cvalue%20name%3D%22IF0%22%3E%3Cblock%20type%3D%22logic_compare%22%20id%3D%2213%22%20inline%3D%22true%22%3E%3Cfield%20name%3D%22OP%22%3EEQ%3C%2Ffield%3E%3Cvalue%20name%3D%22A%22%3E%3Cblock%20type%3D%22BPMNoption%22%20id%3D%2214%22%3E%3C%2Fblock%3E%3C%2Fvalue%3E%3Cvalue%20name%3D%22B%22%3E%3Cblock%20type%3D%22text%22%20id%3D%2215%22%3E%3Cfield%20name%3D%22TEXT%22%3Ego%3C%2Ffield%3E%3C%2Fblock%3E%3C%2Fvalue%3E%3C%2Fblock%3E%3C%2Fvalue%3E%3Cstatement%20name%3D%22DO0%22%3E%3Cblock%20type%3D%22serviceTask%22%20id%3D%2223%22%3E%3Cfield%20name%3D%22NAME%22%3EProcess%20DocuSign%3C%2Ffield%3E%3Cfield%20name%3D%22factType%22%3EREAD%3C%2Ffield%3E%3Cnext%3E%3Cblock%20type%3D%22userTask%22%20id%3D%2216%22%20inline%3D%22false%22%3E%3Cfield%20name%3D%22NAME%22%3EShow%20DocuSign%20View%3C%2Ffield%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fstatement%3E%3Cnext%3E%3Cblock%20type%3D%22end%22%20id%3D%2217%22%20deletable%3D%22false%22%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fxml%3E","resourceName":"bpmn","deploymentId":"347505","version":1,"hasStartForm":false,"isSuspended":false,"tenantId":"io.point.jgaye","BPMNXML":"<definitions targetNamespace=\"http://www.activiti.org/test\" expressionLanguage=\"http://www.w3.org/1999/XPath\" typeLanguage=\"http://www.w3.org/2001/XMLSchema\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:activiti=\"http://activiti.org/bpmn\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"><message name=\"injectListJSON\" id=\"injectListJSON\"/><process isExecutable=\"true\" name=\"Test DocuSign\" id=\"Test_DocuSign\"><documentation>%3Cxml%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%3E%3Cblock%20type%3D%22start%22%20id%3D%2210%22%20deletable%3D%22false%22%20x%3D%220%22%20y%3D%220%22%3E%3Cfield%20name%3D%22NAME%22%3ETest%20DocuSign%3C%2Ffield%3E%3Cnext%3E%3Cblock%20type%3D%22userTask%22%20id%3D%2211%22%20inline%3D%22false%22%3E%3Cfield%20name%3D%22NAME%22%3ESelect%20DocuSign%20Options%3C%2Ffield%3E%3Cnext%3E%3Cblock%20type%3D%22condition%22%20id%3D%2212%22%20inline%3D%22false%22%3E%3Cvalue%20name%3D%22IF0%22%3E%3Cblock%20type%3D%22logic_compare%22%20id%3D%2213%22%20inline%3D%22true%22%3E%3Cfield%20name%3D%22OP%22%3EEQ%3C%2Ffield%3E%3Cvalue%20name%3D%22A%22%3E%3Cblock%20type%3D%22BPMNoption%22%20id%3D%2214%22%3E%3C%2Fblock%3E%3C%2Fvalue%3E%3Cvalue%20name%3D%22B%22%3E%3Cblock%20type%3D%22text%22%20id%3D%2215%22%3E%3Cfield%20name%3D%22TEXT%22%3Ego%3C%2Ffield%3E%3C%2Fblock%3E%3C%2Fvalue%3E%3C%2Fblock%3E%3C%2Fvalue%3E%3Cstatement%20name%3D%22DO0%22%3E%3Cblock%20type%3D%22serviceTask%22%20id%3D%2223%22%3E%3Cfield%20name%3D%22NAME%22%3EProcess%20DocuSign%3C%2Ffield%3E%3Cfield%20name%3D%22factType%22%3EREAD%3C%2Ffield%3E%3Cnext%3E%3Cblock%20type%3D%22userTask%22%20id%3D%2216%22%20inline%3D%22false%22%3E%3Cfield%20name%3D%22NAME%22%3EShow%20DocuSign%20View%3C%2Ffield%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fstatement%3E%3Cnext%3E%3Cblock%20type%3D%22end%22%20id%3D%2217%22%20deletable%3D%22false%22%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fnext%3E%3C%2Fblock%3E%3C%2Fxml%3E</documentation><startEvent name=\"Test DocuSign\" id=\"start\"/><sequenceFlow targetRef=\"userTask1\" sourceRef=\"start\" id=\"flow1\"/><userTask activiti:assignee=\"${wf_currentAssignee}\" activiti:formKey=\"poi_SelectDocuSignOptions_form\" name=\"Select DocuSign Options\" id=\"userTask1\"/><boundaryEvent attachedToRef=\"userTask1\" cancelActivity=\"false\" name=\"Message\" id=\"boundarymessage2\"><messageEventDefinition messageRef=\"injectListJSON\"/></boundaryEvent><sequenceFlow targetRef=\"exclusivegateway2\" sourceRef=\"userTask1\" id=\"flow3\"/><exclusiveGateway id=\"exclusivegateway2\"/><sequenceFlow targetRef=\"serviceTask8\" sourceRef=\"exclusivegateway2\" id=\"flow4\"><conditionExpression xsi:type=\"tFormalExpression\">${wf_optionsOutcome == &quot;go&quot;}</conditionExpression></sequenceFlow>  <serviceTask activiti:class=\"plugins.facts\" name=\"Process DocuSign\" id=\"serviceTask8\"><extensionElements><activiti:field name=\"PluginKey\"><activiti:string>poi_ProcessDocuSign_fact</activiti:string></activiti:field><activiti:field name=\"parameterMap\"><activiti:expression>${ProcessDocuSignREADMap}</activiti:expression></activiti:field></extensionElements></serviceTask><sequenceFlow targetRef=\"userTask3\" sourceRef=\"serviceTask8\" id=\"flow5\"/><userTask activiti:assignee=\"${wf_currentAssignee}\" activiti:formKey=\"poi_ShowDocuSignView_form\" name=\"Show DocuSign View\" id=\"userTask3\"/><boundaryEvent attachedToRef=\"userTask3\" cancelActivity=\"false\" name=\"Message\" id=\"boundarymessage6\"><messageEventDefinition messageRef=\"injectListJSON\"/></boundaryEvent><sequenceFlow targetRef=\"end\" sourceRef=\"userTask3\" id=\"flow7\"/><sequenceFlow targetRef=\"end\" sourceRef=\"exclusivegateway2\" id=\"flow8\"/><endEvent name=\"end\" id=\"end\"/></process></definitions>"}},{"PROCESSTYPE":{"id":"io.point.Docusign_provider:42:354970","name":"Docusign Fact Provider Flow","key":"io.point.Docusign_provider","category":"http://www.activiti.org/test","description":null,"resourceName":"bpmn","deploymentId":"354967","version":42,"hasStartForm":false,"isSuspended":false,"tenantId":"io.point.jgaye","BPMNXML":"<definitions typeLanguage=\"http://www.w3.org/2001/XMLSchema\" expressionLanguage=\"http://www.w3.org/1999/XPath\" targetNamespace=\"http://www.activiti.org/test\" xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:activiti=\"http://activiti.org/bpmn\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\">\n  <process id=\"io.point.Docusign_provider\" name=\"Docusign Fact Provider Flow\" isExecutable=\"true\">\n    <startEvent id=\"startevent1\" name=\"Start\"/>\n    <serviceTask id=\"task3\" name=\"Sign\" activiti:class=\"plugins.fact_components.api_Docusign_Read_Obj_toFields\">\n      <extensionElements>\n        <activiti:field name=\"objType\">\n          <activiti:expression>${objTypeId}</activiti:expression>\n        </activiti:field>\n        <activiti:field name=\"objKey\">\n          <activiti:expression>${objId}</activiti:expression>\n        </activiti:field>\n      </extensionElements>\n    </serviceTask>\n    <sequenceFlow id=\"flow1\" sourceRef=\"startevent1\" targetRef=\"exclusivegateway1\"/>\n    <endEvent id=\"endevent1\" name=\"End\"/>\n    <exclusiveGateway id=\"exclusivegateway1\" name=\"Exclusive Gateway\" default=\"default\"/>\n    <sequenceFlow id=\"flow14\" name=\"GET\" sourceRef=\"exclusivegateway1\" targetRef=\"task3\">\n      <conditionExpression xsi:type=\"tFormalExpression\">${apidata_method == &quot;GET&quot;}</conditionExpression>\n    </sequenceFlow>\n    <sequenceFlow id=\"flow17\" sourceRef=\"task3\" targetRef=\"endevent1\"/>\n    <sequenceFlow id=\"default\" name=\"Unsupported\" sourceRef=\"exclusivegateway1\" targetRef=\"endevent1\"/>\n    <userTask id=\"usertask1\" name=\"Default\" activiti:formKey=\"poi_default_view\"/>\n    <serviceTask id=\"servicetask1\" name=\"OAuth2\" activiti:class=\"plugins.fact_components.api_Docusign_OAuth_Save\">\n      <extensionElements>\n        <activiti:field name=\"username\">\n          <activiti:expression>${username}</activiti:expression>\n        </activiti:field>\n        <activiti:field name=\"password\">\n          <activiti:expression>${password}</activiti:expression>\n        </activiti:field>\n      </extensionElements>\n    </serviceTask>\n    <sequenceFlow id=\"flow18\" name=\"OAuth\" sourceRef=\"exclusivegateway1\" targetRef=\"servicetask1\">\n      <conditionExpression xsi:type=\"tFormalExpression\">${apidata_method == &quot;PUT&quot;}</conditionExpression>\n    </sequenceFlow>\n    <sequenceFlow id=\"flow19\" sourceRef=\"servicetask1\" targetRef=\"endevent1\"/>\n  </process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_io.point.Docusign_provider\">\n    <bpmndi:BPMNPlane bpmnElement=\"io.point.Docusign_provider\" id=\"BPMNPlane_io.point.Docusign_provider\">\n      <bpmndi:BPMNShape bpmnElement=\"startevent1\" id=\"BPMNShape_startevent1\">\n        <omgdc:Bounds height=\"35.0\" width=\"35.0\" x=\"70.0\" y=\"164.0\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape bpmnElement=\"task3\" id=\"BPMNShape_task3\">\n        <omgdc:Bounds height=\"55.0\" width=\"105.0\" x=\"334.0\" y=\"30.0\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape bpmnElement=\"endevent1\" id=\"BPMNShape_endevent1\">\n        <omgdc:Bounds height=\"35.0\" width=\"35.0\" x=\"740.0\" y=\"164.0\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape bpmnElement=\"exclusivegateway1\" id=\"BPMNShape_exclusivegateway1\">\n        <omgdc:Bounds height=\"40.0\" width=\"40.0\" x=\"150.0\" y=\"161.0\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape bpmnElement=\"usertask1\" id=\"BPMNShape_usertask1\">\n        <omgdc:Bounds height=\"55.0\" width=\"105.0\" x=\"334.0\" y=\"220.0\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape bpmnElement=\"servicetask1\" id=\"BPMNShape_servicetask1\">\n        <omgdc:Bounds height=\"55.0\" width=\"105.0\" x=\"334.0\" y=\"100.0\"/>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge bpmnElement=\"flow1\" id=\"BPMNEdge_flow1\">\n        <omgdi:waypoint x=\"105.0\" y=\"181.0\"/>\n        <omgdi:waypoint x=\"150.0\" y=\"181.0\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge bpmnElement=\"flow14\" id=\"BPMNEdge_flow14\">\n        <omgdi:waypoint x=\"170.0\" y=\"161.0\"/>\n        <omgdi:waypoint x=\"170.0\" y=\"57.0\"/>\n        <omgdi:waypoint x=\"334.0\" y=\"57.0\"/>\n        <bpmndi:BPMNLabel>\n          <omgdc:Bounds height=\"13.0\" width=\"23.0\" x=\"179.0\" y=\"41.0\"/>\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge bpmnElement=\"flow17\" id=\"BPMNEdge_flow17\">\n        <omgdi:waypoint x=\"439.0\" y=\"57.0\"/>\n        <omgdi:waypoint x=\"757.0\" y=\"57.0\"/>\n        <omgdi:waypoint x=\"757.0\" y=\"164.0\"/>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge bpmnElement=\"default\" id=\"BPMNEdge_default\">\n        <omgdi:waypoint x=\"190.0\" y=\"181.0\"/>\n        <omgdi:waypoint x=\"740.0\" y=\"181.0\"/>\n        <bpmndi:BPMNLabel>\n          <omgdc:Bounds height=\"13.0\" width=\"63.0\" x=\"209.0\" y=\"164.0\"/>\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge bpmnElement=\"flow18\" id=\"BPMNEdge_flow18\">\n        <omgdi:waypoint x=\"170.0\" y=\"161.0\"/>\n        <omgdi:waypoint x=\"170.0\" y=\"127.0\"/>\n        <omgdi:waypoint x=\"334.0\" y=\"127.0\"/>\n        <bpmndi:BPMNLabel>\n          <omgdc:Bounds height=\"13.0\" width=\"100.0\" x=\"173.0\" y=\"115.0\"/>\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge bpmnElement=\"flow19\" id=\"BPMNEdge_flow19\">\n        <omgdi:waypoint x=\"439.0\" y=\"127.0\"/>\n        <omgdi:waypoint x=\"757.0\" y=\"127.0\"/>\n        <omgdi:waypoint x=\"757.0\" y=\"164.0\"/>\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</definitions>"}}],"forms":[{"_id":{"$oid":"576a8a9a794b32c203ebb1c0"},"id":"576a8a9a794b32c203ebb1c0","owner":{"appid":"51C54CDB-D278-4CFD-B8378EF13462E5FB","org":"io.point.jgaye","user":"jgaye@point.io"},"recType":"form","name":"Select DS options","desc":"NEW CREATED","creatorId":"jgaye@point.io","updaterId":"jgaye@point.io","tstamp":1466600090029,"createDate":{"$date":1466600090029},"origin":{"id":"5768552d794b32c3008be057","name":"Select DS options","desc":"NEW CREATED","creatorId":"jgaye@point.io","createDate":1466600090028,"checksum":"EFE095806C47994A3464D06923715A1672539925A9026C5237CB6D1269298E26L11152"},"data":{"form":"<script>\n    window.App.IndexController.reopen({\n        \n        init: function(){\n            $.getJSON(\"/keychain/docusign?Authorization=\"+facts.wf_origSessionKey).then(function(response) {\n                this.set('facts.keychain', JSON.stringify(response.RESPONSE.obj.docusign, null, \"\\t\"));\n            }.bind(this));\n            \n            if (this.get('facts.relatedType') == \"DocusignTemplate\"){\n                this.set('isTemplate', true);\n                this.set('isNotTemplate', false);\n            } else {\n                this.set('facts.relatedType', \"PIO\");\n                this.set('isTemplate', false);\n                this.set('isNotTemplate', true);\n            }\n            \n            if (this.get('facts.relatedStatus') == \"CLOSED\"){\n                this.set('isOpen', false);\n                this.set('isClosed', true);\n                this.set('isSigned', false);\n            } else if (this.get('facts.relatedStatus') == \"SIGNED\"){\n                this.set('isOpen', false);\n                this.set('isClosed', false);\n                this.set('isSigned', true);\n            } else {\n                this.set('facts.relatedStatus', \"OPEN\");\n                this.set('isOpen', true);\n                this.set('isClosed', false);\n                this.set('isSigned', false);\n            }\n            \n            if (this.get('facts.mode') == 'demo'){\n                this.set('isDemo', true);\n            } else {\n                this.set('facts.mode', \"classic\");\n                this.set('isDemo', false);\n            }\n        },\n        \n        varHeaders: Ember.A([\"key\", \"value\"]),\n        \n        relatedObserver: Ember.observer('facts.relatedId', 'facts.relatedLabel', 'facts.relatedTooltip', 'facts.relatedType', 'facts.relatedMap', 'facts.relatedStatus', function(){\n            var relatedJson = {RELATEDS:[{\n                                    ID:this.get('facts.relatedId'), \n                                    LABEL:this.get('facts.relatedLabel'), \n                                    TOOLTIP:this.get('facts.relatedTooltip'), \n                                    TYPE:this.get('facts.relatedType'), \n                                    MAP:this.get('facts.relatedMap'), \n                                    STATUS:this.get('facts.relatedStatus')\n                                }]};\n            this.set('facts.relatedResult', JSON.stringify(relatedJson,null, \"\\t\"))\n        }).on('init'),\n        \n        demoObserver: Ember.observer('isDemo', function(){\n           if (this.get('isDemo')){\n                this.set('facts.mode', \"demo\");\n            } else {\n                this.set('facts.mode', \"classic\");\n            }\n        }),\n        optionsObserver: Ember.observer('facts.storagelink', 'facts.finishedfilename', 'facts.vars', 'facts.mode', 'facts.skipPreview', 'facts.skipReview', 'facts.brandId', function(){\n            var optionsJson ={ProcessDocuSignREADMap:{\n                                apidata_method: \"GET\",\n                                objId: \"\",\n                                objTypeId: \"\",\n                                display: \"once\",\n                                storagelink:this.get('facts.storagelink'),\n                                finishedfilename:this.get('facts.finishedfilename'),\n                                mode: this.get('facts.mode'),\n                                skipPreview: this.get('facts.skipPreview'),\n                                skipReview: this.get('facts.skipReview'),\n                                brandId:this.get('facts.brandId')\n                            }};\n            if (this.get('facts.vars')) {\n                this.get('facts.vars').forEach(function(item){\n                    optionsJson.ProcessDocuSignREADMap[item.key] = item.value;\n                });\n            }\n            this.set('facts.optionsResult', JSON.stringify(optionsJson,null, \"\\t\"));\n        }).on('init'),\n        \n        actions: {\n            \n            updateKeychain: function(){\n                $.ajax({\n                    type: 'POST',\n                    contentType: 'application/json',\n                    url: \"/keychain?Authorization=\"+facts.wf_origSessionKey,\n                    data: \"{\\\"docusign\\\":\"+this.get('facts.keychain')+\"}\"\n                })\n            },\n            \n            toggleTemplate: function(){\n                if (this.get('isNotTemplate')){\n                    this.set('facts.relatedType', \"DocusignTemplate\");\n                    this.set('isTemplate', true);\n                    this.set('isNotTemplate', false);\n                } else {\n                    this.set('facts.relatedType', \"PIO\");\n                    this.set('isTemplate', false);\n                    this.set('isNotTemplate', true);\n                }\n            },\n            \n            toggleStatus: function(){\n                if (this.get('facts.relatedStatus') == \"CLOSED\"){\n                    this.set('facts.relatedStatus', \"SIGNED\");\n                    this.set('isOpen', false);\n                    this.set('isClosed', false);\n                    this.set('isSigned', true);\n                } else if (this.get('facts.relatedStatus') == \"SIGNED\"){\n                    this.set('facts.relatedStatus', \"OPEN\");\n                    this.set('isOpen', true);\n                    this.set('isClosed', false);\n                    this.set('isSigned', false);\n                } else {\n                    this.set('facts.relatedStatus', \"CLOSED\");\n                    this.set('isOpen', false);\n                    this.set('isClosed', true);\n                    this.set('isSigned', false);\n                }\n            },\n            \n            toggleMode: function(){\n                if (this.get('facts.mode') == 'demo'){\n                    this.set('facts.mode', \"classic\");\n                    this.set('isDemo', false);\n                } else {\n                    this.set('facts.mode', \"demo\");\n                    this.set('isDemo', true);\n                }\n            },\n            \n            goAction: function () {\n                document.getElementById('wf_optionsOutcome').value = 'go';\n                \n                var relateds = {};\n                $.extend(relateds, JSON.parse(this.get('facts.relatedResult')));\n                \n                var readMap = {};\n                $.extend(readMap, JSON.parse(this.get('facts.optionsResult')));\n\n                var myJsonObj = {\"REQUEST\": {\"INPUT\" : {\"RELATEDS\":relateds.RELATEDS , \"FACTS\" : readMap}}};\n\n                $.ajax({\n                    url: \"/messages/injectListJSON/\"+jsonTask.DETAILS.ID+\"?Authorization=\"+sessionKey,\n                    type: \"PUT\",\n                    data: JSON.stringify(myJsonObj),\n                    contentType: \"application/json\",\n                    success: function(data){\n                        console.log(\"ajax update successful\");\n                        this.set(\"isSubmitting\", true );\n                        $('#emberForm').submit();\n                        return true;\n                    }.bind(this),\n                    failure: function(data){\n                        console.log(\"ajax update failed\");\n                    }\n                });\n                \n            },\n            cancelAction: function () {\n                document.getElementById('wf_optionsOutcome').value = 'cancel';\n                this.set(\"isSubmitting\", true );\n                $('#emberForm').submit();\n                return true;\n            }\n        }\n    });\n</script>\n\n<style>\n    [type=\"checkbox\"], [type=\"radio\"] {\n        margin: 0 5px;\n    }\n</style>\n\n<script type=\"text/x-handlebars\" data-template-name=\"index\">\n    {{#sc-container}}\n        \n        <h1 class=\"showcase-title\">Your DocuSign Keychain is</h1>\n        {{sc-textarea value=facts.keychain resizable=true}}\n        {{#sc-buttons}}\n            {{#sc-button action=\"updateKeychain\"}}Update Keychain{{/sc-button}}\n        {{/sc-buttons}}\n        <br>\n        \n        <h1 class=\"showcase-title\">Your RELATED info</h1>\n        {{sc-input label=\"ID\" value=facts.relatedId}}\n        {{sc-input label=\"LABEL\" value=facts.relatedLabel}}\n        {{sc-input label=\"TOOLTIP\" value=facts.relatedTooltip}}\n        <h2 class=\"showcase-title\">TYPE</h2>\n        {{#sc-buttons}}\n            <div {{action \"toggleTemplate\"}} style=\"cursor:pointer\">\n            {{input type='checkbox' checked=isNotTemplate disabled=true}} PIO\n            {{input type='checkbox' checked=isTemplate disabled=true}} DocusignTemplate\n            </div>\n        {{/sc-buttons}}\n        {{sc-input label=\"MAP\" value=facts.relatedMap}}\n        <h2 class=\"showcase-title\">STATUS</h2>\n        {{#sc-buttons}}\n            <div {{action \"toggleStatus\"}} style=\"cursor:pointer\">\n            {{input type='checkbox' checked=isOpen disabled=true}} OPEN\n            {{input type='checkbox' checked=isClosed disabled=true}} CLOSED\n            {{input type='checkbox' checked=isSigned disabled=true}} SIGNED\n            </div>\n        {{/sc-buttons}}\n        <h2 class=\"showcase-title\">RESULT</h2>\n        {{sc-textarea name='relatedResult' value=facts.relatedResult resizable=true}}\n        <br>\n        \n        <h1 class=\"showcase-title\">Options</h1>\n        {{sc-input label=\"Storage Link\" name=\"storagelink\" value=facts.storagelink}}\n        {{sc-input label=\"Finished Filename\" name=\"finishedfilename\" value=facts.finishedfilename}}\n        <h2 class=\"showcase-title\">Variables</h2>\n        {{sc-table headers=varHeaders content=facts.vars expandable=true}}\n        {{#sc-buttons}}\n            {{input type='checkbox' checked=isDemo}} Request Signature Renewal\n        {{/sc-buttons}}\n        {{#sc-buttons}}\n            {{input type='checkbox' checked=facts.skipPreview}} Skip Signing Click\n            {{input type='checkbox' checked=facts.skipReview}} Skip Done Click\n        {{/sc-buttons}}\n        {{sc-input label=\"Branding\" name=\"brandId\" value=facts.brandId}}\n        <h2 class=\"showcase-title\">RESULT</h2>\n        {{sc-textarea name='optionsResult' value=facts.optionsResult resizable=true}}\n\n        {{#sc-buttons}}\n            {{#sc-button action='cancelAction' type='danger' icon='cancel' icon-position='before'}}\n                Cancel\n            {{/sc-button}}\n            {{#sc-button action='goAction' type='confirm' icon='done'}}\n                Go\n            {{/sc-button}}\n        {{/sc-buttons}}\n\n        {{#sc-overlay active=isSubmitting}}\n            {{sc-loading center=true}}\n        {{/sc-overlay}}\n\n    {{/sc-container}}\n \n    {{input type=\"hidden\" id=\"wf_optionsOutcome\" name=\"wf_optionsOutcome\" value=outcome}}\n\n</script>","facts":{}},"checksum":"EFE095806C47994A3464D06923715A1672539925A9026C5237CB6D1269298E26L11152"},{"_id":{"$oid":"576a8a9a794b32c103ebb1c1"},"id":"576a8a9a794b32c103ebb1c1","owner":{"appid":"51C54CDB-D278-4CFD-B8378EF13462E5FB","org":"io.point.jgaye","user":"jgaye@point.io"},"recType":"form","name":"Show DS Result","desc":"NEW CREATED","creatorId":"jgaye@point.io","updaterId":"jgaye@point.io","tstamp":1466600090029,"createDate":{"$date":1466600090029},"origin":{"id":"5768552d794b32c4008be058","name":"Show DS Result","desc":"NEW CREATED","creatorId":"jgaye@point.io","createDate":1466600090028,"checksum":"10863592D833F8DFCB8FB7689D107C5145FC099F5355AC541DC964E33F6949E5L1024"},"data":{"form":"<script>\n window.App.IndexController.reopen({\n   isSubmitting: false,\n   \n   init: function(){\n        var appFacts = {};\n        $.extend(appFacts, JSON.parse(this.get('facts.relatedResult')), JSON.parse(this.get('facts.optionsResult')));\n        this.set('appFacts', JSON.stringify(appFacts, null, '\\t'));\n   },\n   \n   actions: {\n     submitAction: function(){\n       this.set(\"isSubmitting\", true );\n       $(\"#emberForm\").submit();\n       return true;\n     }\n   }\n });\n</script>\n<script type=\"text/x-handlebars\" data-template-name=\"index\">\n\n  {{#sc-container}}\n  \n    {{sc-textarea value=appFacts resizable=true}}\n \n    {{#sc-buttons}}\n      {{#sc-button action='submitAction'}}\n        Done\n      {{/sc-button}}\n    {{/sc-buttons}}\n \n    {{#sc-overlay active=isSubmitting}}\n      {{sc-loading center=true}}\n    {{/sc-overlay}}\n\n  {{/sc-container}}\n\n</script>","facts":{}},"checksum":"10863592D833F8DFCB8FB7689D107C5145FC099F5355AC541DC964E33F6949E5L1024"},{"_id":{"$oid":"576ad3d8794b321704439458"},"id":"576ad3d8794b321704439458","owner":{"appid":"51C54CDB-D278-4CFD-B8378EF13462E5FB","org":"io.point.jgaye","user":"jgaye@point.io"},"recType":"form","name":"DocuSign Showcase View","desc":"NEW CREATED","creatorId":"jgaye@point.io","updaterId":"jgaye@point.io","tstamp":1466631924520,"createDate":{"$date":1466618840185},"updateDate":{"$date":1466631924520},"origin":{"id":"573a0d644000005b00dba163","name":"DocuSign Showcase View","desc":"NEW CREATED","creatorId":"jgaye@point.io","createDate":1466618840185,"checksum":"C258050494CBB055487758683B5385182C46395D9BF8FF59F1DB4AAC7410A7E4L11309"},"data":{"form":"<script type='text/javascript'>\n\n    //Ember Class for a RELATED\n    App.Related = Ember.Object.extend({\n        id: \"\",\n        label: \"\",\n        tooltip: \"\",\n        type: \"\",\n        url: \"\",\n        status: \"\",\n        frameName: \"SigningFrame\",\n        wasOpened: Ember.computed('status', function(){\n            if (this.get('status').toUpperCase() == \"OPEN\") return true;\n            return false;\n        })\n    })\n    \n    //Building the Ember RELATEDS\n    App.Related.reopenClass({\n        createRelatedfromRELATED: function(data) {\n            console.log(\">>>>>>>>>>>>>>>>> MAP value: \" + data.MAP);\n            if (!data.hasOwnProperty('STATUS')) {data.STATUS = \"OPEN\";}\n            if (data.STATUS != \"CLOSED\" && data.STATUS != \"SIGNED\") {data.STATUS = \"OPEN\";}\n            return App.Related.create({\n                id: data.ID, \n                label: data.LABEL, \n                tooltip: data.TOOLTIP, \n                type: data.TYPE, \n                url: data.URL, \n                map: data.MAP, \n                status: data.STATUS,\n                frameName: \"SigningFrame\" + data.ID\n            });\n        }\n    })\n\n    //Main Controller\n    App.PreviewController = Ember.Controller.extend({\n        facts: jsonTask,\n        loading: false,\n\n        rawRelateds: Ember.computed('facts', function() {\n            \n            //Check that there is no ID duplicates\n            var ids = Ember.A();\n            var rawRelateds = Ember.A();\n            \n            this.get('facts').RELATEDS.forEach(function(value, index){\n                // if (!ids.contains(value.ID)){\n                    ids.pushObject(value.ID);\n                    rawRelateds.pushObject(value)\n                // }\n            })\n            \n            return rawRelateds\n        }),\n        \n        docsToSign: Ember.computed('rawRelateds', function() {\n            var relatedObjs = Ember.A();\n            this.get('rawRelateds').forEach( function(related) {\n                if (!related.hasOwnProperty('STATUS')) relatedObjs.pushObject(App.Related.createRelatedfromRELATED(related));\n                else if (related.STATUS.toUpperCase() != \"SIGNED\" && related.STATUS.toUpperCase() != \"CLOSED\") relatedObjs.pushObject(App.Related.createRelatedfromRELATED(related));\n            }.bind(this));\n            return relatedObjs;\n        }),\n        \n        signedDocs: Ember.computed('rawRelateds', function() {\n            var relatedObjs = Ember.A();\n            this.get('rawRelateds').forEach( function(related) {\n                if (related.hasOwnProperty('STATUS')) if (related.STATUS.toUpperCase() == \"SIGNED\") relatedObjs.pushObject(App.Related.createRelatedfromRELATED(related));\n            }.bind(this));\n            return relatedObjs;\n        }),\n        \n        closedDocs: Ember.computed('rawRelateds', function() {\n            var relatedObjs = Ember.A();\n            this.get('rawRelateds').forEach( function(related) {\n                if (related.hasOwnProperty('STATUS')) if (related.STATUS.toUpperCase() == \"CLOSED\") relatedObjs.pushObject(App.Related.createRelatedfromRELATED(related));\n            }.bind(this));\n            return relatedObjs;\n        }),\n        \n        isSkippingPreview: Ember.computed('docsToSign', 'params.skipPreview', function() {\n            var result = false\n            if (this.get('params.skipPreview')){\n                \n                this.get('docsToSign').forEach(function(doc){\n                    if (doc.status.toUpperCase() != \"OPEN\"){\n                        result = doc;\n                    }\n                })\n                \n            }\n            return result;\n        }),\n        \n        //If you have skipReview true, and as many doc signed as doc that were suppose to be signed, skip the review page and submit\n        isSkippingReview: Ember.computed('docsToSign', 'signedDocs', 'params.skipReview', function() {\n            if (this.get('params.skipReview') && this.get('signedDocs').length == this.get('docsToSign').length){\n                return true;\n            }\n        }),\n        \n        init: function(){\n          if (this.get('isSkippingReview')) this.send('submitAction');\n          else if (this.get('isSkippingPreview')) this.send('docusignAction', 1, this.get('isSkippingPreview').id, this.get('isSkippingPreview'), this.get('isSkippingPreview').frameName)\n        },\n        \n        actions: {\n            openView: function(url){\n                if(url) {window.open(url)};\n            },\n            \n            docusignAction: function (pageNum, id, tObject, frameName) {\n                \n                var self = this;\n                \n                //Set the screen to loading\n                this.set('loading', true);\n                \n                //indicate that the related has been open\n                var newRelateds = [];\n                this.get('rawRelateds').forEach(function(value, index){\n                    if (value.ID == id && value.STATUS == \"SIGNED\"){\n                        var newRelated = value\n                        newRelated.STATUS = \"CLOSED\";\n                        newRelateds.push(newRelated);\n                    }\n                })\n                \n                var myJsonObj = {\"REQUEST\": {\"INPUT\" : {\"RELATEDS\": newRelateds}}};\n\n                $.ajax({\n                    url: \"/messages/injectListJSON/\"+jsonTask.DETAILS.ID+\"?Authorization=\"+sessionKey,\n                    type: \"PUT\",\n                    data: JSON.stringify(myJsonObj),\n                    contentType: \"application/json\",\n                    success: function(data){\n                        console.log(\"ajax update successful\");\n                    },\n                    failure: function(data){\n                        console.log(\"ajax update failed\");\n                    }\n                });\n                \n                this.set('isOpen', true);\n                console.log(\"My Related Type is: \" + tObject.type + \" with id: \" + tObject.id + \" with map: \" + tObject.map );\n                var storelink = this.get(\"params.storagelink\");\n                var storeclause = \"\", filenameclause = \"\", mapclause = \"\";\n                if ((typeof storelink != undefined) && (storelink != \"\")) {\n                    storeclause = \"&storageid=\" + storelink;\n                }\n                else storeclause = \"&storageid=\" + tObject.id;\n\n                var fileName = this.get(\"params.finishedfilename\");\n                if ((typeof fileName != undefined) && (fileName != \"\")) {\n                    filenameclause = \"&filename=\" + fileName;\n                }\n                else filenameclause = \"&filename=\" + \"signed_copy.pdf\";\n\n                if ((typeof  tObject.map != undefined) && ( tObject.map != \"\")) {\n                    mapclause = \"&map=\" +  tObject.map;\n                }\n                console.log(\"After logic, storage id is: \" + storeclause + \" and filename: \" + filenameclause);\n\n                if (tObject.type === \"DocusignTemplate\") {\n                    $.ajax(\"/docusign?templateId=\" + tObject.id +\n                            storeclause +\n                            \"&taskid=\" + taskid +\n                            filenameclause +\n                            mapclause +\n                            \"&Authorization=\" + sessionKey, {\n                        type: \"POST\",\n                        dataType: \"json\",\n                        contentType: \"application/json; charset=utf-8\",\n                        data: JSON.stringify(this.get(\"params\")),\n                        success: function (data, state, header) {\n                            self.set(\"hasError\", false);\n                            var iframeLink = data.RESPONSE.PASSTHRU;\n                            window.location.replace(iframeLink);\n                        },\n                        error: function (XMLHttpRequest, textStatus, errorThrown) {\n                            var errDetail = XMLHttpRequest.responseJSON.RESPONSE.MESSAGE;\n                            console.log(\"hit docusign error: \" + errDetail);\n                            self.set(\"hasError\", true);\n                            self.set(\"signError\", errorThrown + \": \" + errDetail);\n                            tObject.set(\"isDisplayedSign\", false);\n                        }\n                    });\n                }\n                else {\n                    $.ajax(\"/docusign?fileURL=\" + encodeURIComponent(tObject.url) +\n                            \"&linkid=\" + tObject.id + \"&taskid=\" + taskid +\n                            storeclause +\n                            filenameclause +\n                            mapclause +\n                            \"&Authorization=\" + sessionKey, {\n                        type: \"POST\",\n                        dataType: \"json\",\n                        contentType: \"application/json; charset=utf-8\",\n                        data: JSON.stringify(this.get(\"params\")),\n                        success: function (data, state, header) {\n                            self.set(\"hasError\", false);\n                            var iframeLink = data.RESPONSE.PASSTHRU;\n                            window.location.replace(iframeLink);\n                        },\n                        error: function (XMLHttpRequest, textStatus, errorThrown) {\n                            var errDetail = XMLHttpRequest.responseJSON.RESPONSE.MESSAGE;\n                            console.log(\"hit docusign error: \" + errDetail);\n                            self.set(\"hasError\", true);\n                            self.set(\"signError\", errorThrown + \": \" + errDetail);\n                            tObject.set(\"isDisplayedSign\", false);\n                        }\n                    });\n                }\n                tObject.set(\"isDisplayedSign\", true);\n            },\n            \n            submitAction: function(){\n                this.set('loading', true);\n                $(\"#emberForm\").submit();\n                return true;\n            }\n            \n            \n        }\n    });\n    \n</script>\n\n<script type=\"text/x-handlebars\" data-template-name=\"preview\">\n\n    {{#sc-container}}\n    \n        <div class=\"showcase-grid\">\n            <hr>\n            \n            <div class=\"showcase-grid__item one-half\">\n            {{#each docsToSign as |doc|}}\n            \n                <div class=\"showcase-grid\">\n                    <div class=\"showcase-grid__item one-third\">\n                \n                        <h3 class=\"showcase-title\">{{doc.label}}</h3>\n                        \n                    </div>\n                    <div class=\"showcase-grid__item two-thirds\">\n                    \n                        {{#sc-buttons}}\n                            <a {{action \"docusignAction\" 1 doc.id doc doc.frameName}}>\n                                {{#sc-button  size='small' type='confirm' icon='get_app'}}\n                                    Sign\n                                {{/sc-button}}\n                            </a>\n                            <a {{action 'openView' doc.url}}>\n                                {{#sc-button  size='small' icon='visibility' disabled=(if doc.url false true)}}\n                                    View\n                                {{/sc-button}}\n                            </a>\n                        {{/sc-buttons}}\n                        \n                    </div>\n                </div>\n                \n            {{/each}}\n            </div>\n            \n            <div class=\"showcase-grid__item one-half\">\n            {{#each signedDocs as |doc|}}\n            \n                <div class=\"showcase-grid\">\n                    <div class=\"showcase-grid__item one-third\">\n                \n                        <h3 class=\"showcase-title\">{{doc.label}}</h3>\n                        \n                    </div>\n                    <div class=\"showcase-grid__item two-thirds\">\n                    \n                        {{#sc-buttons}}\n                            <a {{action \"docusignAction\" 1 doc.id doc doc.frameName}}>\n                                {{#sc-button  size='small' type='confirm' icon='get_app'}}\n                                    Sign again\n                                {{/sc-button}}\n                            </a>\n                            <a {{action 'openView' doc.url}}>\n                                {{#sc-button  size='small' icon='visibility' disabled=(if doc.url false true)}}\n                                    View\n                                {{/sc-button}}\n                            </a>\n                        {{/sc-buttons}}\n                        \n                    </div>\n                </div>\n            \n            {{/each}}\n            {{#each closedDocs as |doc|}}\n            \n                <div class=\"showcase-grid\">\n                    <div class=\"showcase-grid__item one-third\">\n                \n                        <h3 class=\"showcase-title\">{{doc.label}}</h3>\n                        \n                    </div>\n                    <div class=\"showcase-grid__item two-thirds\">\n                    \n                        {{#sc-buttons}}\n                            <a {{action 'openView' doc.url}}>\n                                {{#sc-button  size='small' icon='visibility' disabled=(if doc.url false true)}}\n                                    View\n                                {{/sc-button}}\n                            </a>\n                        {{/sc-buttons}}\n                        \n                    </div>\n                </div>\n            \n            {{/each}}\n            </div>\n        </div>\n        \n        {{#if hasError}}\n            {{#sc-snippet}}\n                Docusign Error: {{signError}}\n            {{/sc-snippet}}\n        {{/if}}\n        \n        {{#sc-overlay active=loading}}\n            {{sc-loading center=true}}\n        {{/sc-overlay}}\n    \n    {{/sc-container}}\n    \n</script>","facts":{}},"checksum":"075D670CB2B3DBB235AF4B25D89E26BC51EFE42AE147E45731C431DC979BA5A6L14451"}],"icon":[]}